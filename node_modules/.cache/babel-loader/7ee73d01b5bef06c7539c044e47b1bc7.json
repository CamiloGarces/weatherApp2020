{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\nconst WeatherLocation = ({\n  onWeatherLocationClick,\n  city,\n  data\n}) => render = () => {\n  const {\n    onWeatherLocationClick,\n    city,\n    data\n  } = this.props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherLocationCont\",\n    onClick: onWeatherLocationClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Location, {\n    city: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), data ? /*#__PURE__*/React.createElement(WeatherData, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 67\n    }\n  }));\n};\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string,\n  onWeatherLocationClick: PropTypes.func,\n  data: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.string.isRequired\n  })\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js"],"names":["React","CircularProgress","PropTypes","getUrlWeatherByCity","Location","WeatherData","WeatherLocation","onWeatherLocationClick","city","data","render","props","propTypes","string","func","shape","temperature","number","isRequired","weatherState","humidity","wind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAGA;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,sBAAF;AAA0BC,EAAAA,IAA1B;AAAgCC,EAAAA;AAAhC,CAAD,KAEpBC,MAAM,GAAG,MAAM;AACX,QAAM;AAAEH,IAAAA,sBAAF;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,MAAyC,KAAKE,KAApD;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,OAAO,EAAEJ,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKC,IAAI,gBAAG,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA6C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtD,CADJ;AAOH,CAXL;;AAcAH,eAAe,CAACM,SAAhB,GAA4B;AACxBJ,EAAAA,IAAI,EAAEN,SAAS,CAACW,MADQ;AAExBN,EAAAA,sBAAsB,EAAEL,SAAS,CAACY,IAFV;AAGxBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,KAAV,CAAgB;AAClBC,IAAAA,WAAW,EAACd,SAAS,CAACe,MAAV,CAAiBC,UADX;AAElBC,IAAAA,YAAY,EAAEjB,SAAS,CAACW,MAAV,CAAiBK,UAFb;AAGlBE,IAAAA,QAAQ,EAAElB,SAAS,CAACe,MAAV,CAAiBC,UAHT;AAIlBG,IAAAA,IAAI,EAAEnB,SAAS,CAACW,MAAV,CAAiBK;AAJL,GAAhB;AAHkB,CAA5B;AAWA,eAAeZ,eAAf","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n\n\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\n\nconst WeatherLocation = ({ onWeatherLocationClick, city, data }) => (\n\n    render = () => {\n        const { onWeatherLocationClick, city, data } = this.props;\n        return (\n            <div className='weatherLocationCont' onClick={onWeatherLocationClick}>\n                <Location city={city}></Location>\n                {data ? <WeatherData data={data}></WeatherData> : <CircularProgress\n                />}\n            </div>\n        );\n    }\n);\n\nWeatherLocation.propTypes = {\n    city: PropTypes.string,\n    onWeatherLocationClick: PropTypes.func,\n    data: PropTypes.shape({\n        temperature:PropTypes.number.isRequired,\n        weatherState: PropTypes.string.isRequired,\n        humidity: PropTypes.number.isRequired,\n        wind: PropTypes.string.isRequired,\n    }),\n}\n\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}