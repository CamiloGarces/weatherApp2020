{"ast":null,"code":"import convert from 'convert-units';\nimport { CLOUD, SUN, RAIN, SNOW, THUNDER, DRIZZLE } from './../constants/weathers';\n\nconst getTemp = kelvin => {\n  return Number(convert(kelvin).from(\"K\").to(\"C\").toFixed(0));\n};\n\nconst getWeatherState = weather => {\n  const {\n    id\n  } = weather;\n\n  if (id < 300) {\n    return THUNDER;\n  } else if (id < 400) {\n    return DRIZZLE;\n  } else if (id < 600) {\n    return RAIN;\n  } else if (id < 700) {\n    return SNOW;\n  } else if (id === 800) {\n    return SUN;\n  } else {\n    return CLOUD;\n  }\n};\n\nconst transformWeather = weather_data => {\n  const {\n    humidity,\n    temp\n  } = weather_data.main;\n  const {\n    speed\n  } = weather_data.wind;\n  const weatherState = getWeatherState(weather_data.weather[0]);\n  const temperature = getTemp(temp);\n  const data = {\n    humidity,\n    temperature,\n    weatherState,\n    wind: `${speed} m/s`\n  };\n  return data;\n};\n\nexport default transformWeather;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/services/transformWeather.js"],"names":["convert","CLOUD","SUN","RAIN","SNOW","THUNDER","DRIZZLE","getTemp","kelvin","Number","from","to","toFixed","getWeatherState","weather","id","transformWeather","weather_data","humidity","temp","main","speed","wind","weatherState","temperature","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,SACIC,KADJ,EAEIC,GAFJ,EAGIC,IAHJ,EAIIC,IAJJ,EAKIC,OALJ,EAMIC,OANJ,QAOO,yBAPP;;AASA,MAAMC,OAAO,GAAGC,MAAM,IAAI;AACtB,SAAOC,MAAM,CAACT,OAAO,CAACQ,MAAD,CAAP,CAAgBE,IAAhB,CAAqB,GAArB,EAA0BC,EAA1B,CAA6B,GAA7B,EAAkCC,OAAlC,CAA0C,CAA1C,CAAD,CAAb;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAGC,OAAO,IAAI;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAf;;AACA,MAAGC,EAAE,GAAG,GAAR,EAAa;AACb,WAAOV,OAAP;AACC,GAFD,MAEM,IAAGU,EAAE,GAAG,GAAR,EAAY;AACd,WAAOT,OAAP;AACH,GAFK,MAEA,IAAGS,EAAE,GAAG,GAAR,EAAY;AACd,WAAOZ,IAAP;AACH,GAFK,MAEA,IAAIY,EAAE,GAAG,GAAT,EAAa;AACf,WAAOX,IAAP;AACH,GAFK,MAEA,IAAIW,EAAE,KAAK,GAAX,EAAe;AACjB,WAAOb,GAAP;AACH,GAFK,MAEA;AACF,WAAOD,KAAP;AACH;AACJ,CAfD;;AAiBA,MAAMe,gBAAgB,GAAGC,YAAY,IAAI;AACrC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBF,YAAY,CAACG,IAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,YAAY,CAACK,IAA/B;AACA,QAAMC,YAAY,GAAGV,eAAe,CAACI,YAAY,CAACH,OAAb,CAAqB,CAArB,CAAD,CAApC;AACA,QAAMU,WAAW,GAAGjB,OAAO,CAACY,IAAD,CAA3B;AAEA,QAAMM,IAAI,GAAG;AACTP,IAAAA,QADS;AAETM,IAAAA,WAFS;AAGTD,IAAAA,YAHS;AAITD,IAAAA,IAAI,EAAG,GAAED,KAAM;AAJN,GAAb;AAOA,SAAOI,IAAP;AACH,CAdD;;AAgBA,eAAeT,gBAAf","sourcesContent":["import convert from 'convert-units'\nimport {\n    CLOUD,\n    SUN,\n    RAIN,\n    SNOW,\n    THUNDER,\n    DRIZZLE,\n} from './../constants/weathers';\n\nconst getTemp = kelvin => {\n    return Number(convert(kelvin).from(\"K\").to(\"C\").toFixed(0));\n}\n\nconst getWeatherState = weather => {\n    const { id } = weather;\n    if(id < 300) {\n    return THUNDER;\n    }else if(id < 400){\n        return DRIZZLE;\n    }else if(id < 600){\n        return RAIN;\n    }else if (id < 700){\n        return SNOW\n    }else if (id === 800){\n        return SUN\n    }else {\n        return CLOUD;\n    }\n}\n\nconst transformWeather = weather_data => {\n    const { humidity, temp } = weather_data.main;\n    const { speed } = weather_data.wind;\n    const weatherState = getWeatherState(weather_data.weather[0]);\n    const temperature = getTemp(temp);\n\n    const data = {\n        humidity,\n        temperature,\n        weatherState,\n        wind: `${speed} m/s`,\n    }\n\n    return data;\n}\n\nexport default transformWeather;"]},"metadata":{},"sourceType":"module"}