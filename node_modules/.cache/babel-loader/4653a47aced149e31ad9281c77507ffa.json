{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/WeatherData/WeatherTemperature.js\";\nimport React from 'react';\nimport WeatherIcons from 'react-weathericons';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { CLOUD, SUN, RAIN, SNOW, THUNDER, DRIZZLE } from './../../../constants/weathers';\nconst icons = {\n  [CLOUD]: \"cloud\",\n  [SUN]: \"day-sunny\",\n  [RAIN]: \"rain\",\n  [SNOW]: \"show\",\n  [THUNDER]: \"day-thunderstorm\",\n  [DRIZZLE]: \"day-showers\"\n};\n\nconst getWeatherIcon = weatherState => {\n  const sizeIcon = '4x';\n  const icon = icons[weatherState];\n  if (icon) return /*#__PURE__*/React.createElement(WeatherIcons, {\n    className: \"wicon\",\n    name: icon,\n    size: sizeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }\n  });else return /*#__PURE__*/React.createElement(WeatherIcons, {\n    className: \"wicon\",\n    name: \"day-sunny\",\n    size: sizeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  });\n};\n\nconst WeatherTemperature = ({\n  temperature,\n  weatherState\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"weatherTemperatureCont\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, getWeatherIcon(weatherState), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"temperature\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}, `${temperature}`), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"temperatureType\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, `Cº`));\n\nWeatherTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  weatherState: PropTypes.string.isRequired\n};\nexport default WeatherTemperature;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/WeatherData/WeatherTemperature.js"],"names":["React","WeatherIcons","PropTypes","CLOUD","SUN","RAIN","SNOW","THUNDER","DRIZZLE","icons","getWeatherIcon","weatherState","sizeIcon","icon","WeatherTemperature","temperature","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA,SACIC,KADJ,EAEIC,GAFJ,EAGIC,IAHJ,EAIIC,IAJJ,EAKIC,OALJ,EAMIC,OANJ,QAOO,+BAPP;AASA,MAAMC,KAAK,GAAG;AACV,GAACN,KAAD,GAAS,OADC;AAEV,GAACC,GAAD,GAAO,WAFG;AAGV,GAACC,IAAD,GAAQ,MAHE;AAIV,GAACC,IAAD,GAAQ,MAJE;AAKV,GAACC,OAAD,GAAW,kBALD;AAMV,GAACC,OAAD,GAAW;AAND,CAAd;;AAQA,MAAME,cAAc,GAAGC,YAAY,IAAI;AACnC,QAAMC,QAAQ,GAAG,IAAjB;AACA,QAAMC,IAAI,GAAGJ,KAAK,CAACE,YAAD,CAAlB;AACA,MAAGE,IAAH,EACI,oBAAO,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,IAAI,EAAEA,IAAtC;AAA4C,IAAA,IAAI,EAAED,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CADJ,KAGI,oBAAO,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,IAAI,EAAE,WAAtC;AAAmD,IAAA,IAAI,EAAEA,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACP,CAPD;;AAQA,MAAME,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeJ,EAAAA;AAAf,CAAD,kBACvB;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQD,cAAc,CAACC,YAAD,CAFtB,eAII;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgC,GAAEI,WAAY,EAA9C,CAJJ,eAKI;AAAM,EAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAoC,IAApC,CALJ,CADJ;;AAUAD,kBAAkB,CAACE,SAAnB,GAA+B;AAC3BD,EAAAA,WAAW,EAAEb,SAAS,CAACe,MAAV,CAAiBC,UADH;AAE3BP,EAAAA,YAAY,EAAET,SAAS,CAACiB,MAAV,CAAiBD;AAFJ,CAA/B;AAKA,eAAeJ,kBAAf","sourcesContent":["import React from 'react';\nimport WeatherIcons from 'react-weathericons';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nimport {\n    CLOUD,\n    SUN,\n    RAIN,\n    SNOW,\n    THUNDER,\n    DRIZZLE,\n} from './../../../constants/weathers';\n\nconst icons = {\n    [CLOUD]: \"cloud\",\n    [SUN]: \"day-sunny\",\n    [RAIN]: \"rain\",\n    [SNOW]: \"show\",\n    [THUNDER]: \"day-thunderstorm\",\n    [DRIZZLE]: \"day-showers\",\n}\nconst getWeatherIcon = weatherState => {\n    const sizeIcon = '4x';\n    const icon = icons[weatherState];\n    if(icon)\n        return <WeatherIcons className='wicon' name={icon} size={sizeIcon} />\n    else\n        return <WeatherIcons className='wicon' name={\"day-sunny\"} size={sizeIcon} />\n}\nconst WeatherTemperature = ({ temperature, weatherState}) => (\n    <div className='weatherTemperatureCont'>\n        {\n            getWeatherIcon(weatherState)\n        }\n        <span className='temperature'>{`${temperature}`}</span>\n        <span className='temperatureType'>{`Cº`}</span>\n    </div>\n);\n\nWeatherTemperature.propTypes = {\n    temperature: PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired,\n};\n\nexport default WeatherTemperature;"]},"metadata":{},"sourceType":"module"}