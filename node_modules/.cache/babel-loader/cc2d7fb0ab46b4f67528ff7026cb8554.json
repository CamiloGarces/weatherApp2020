{"ast":null,"code":"export const SET_CITY = 'SET_CITY';\nexport const setCity = payload => ({\n  type: SET_CITY,\n  payload\n});\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url = 'http://api.openweathermap.org/data/2.5/forecast';\nexport const fetchForecast = payload => {\n  return dispatch => {\n    const url_forecast = `${url}?q=${city}&appid=${api_key}`; // activar en el estado un indicador de busqueda de datos\n\n    fetch(url_forecast).then(data => data.json()).then(WeatherData => {\n      const forecastData = transformForecast(WeatherData);\n      console.log(forecastData); //modificar el estado con el resultado de la promise    \n    });\n  };\n};","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/actions/index.js"],"names":["SET_CITY","setCity","payload","type","api_key","url","fetchForecast","dispatch","url_forecast","city","fetch","then","data","json","WeatherData","forecastData","transformForecast","console","log"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,OAAO,GAAGC,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEH,QAAR;AAAkBE,EAAAA;AAAlB,CAAL,CAAvB;AAEP,MAAME,OAAO,GAAG,kCAAhB;AACA,MAAMC,GAAG,GAAG,iDAAZ;AAEA,OAAO,MAAMC,aAAa,GAAGJ,OAAO,IAAI;AACpC,SAAOK,QAAQ,IAAI;AACf,UAAMC,YAAY,GAAI,GAAEH,GAAI,MAAKI,IAAK,UAASL,OAAQ,EAAvD,CADe,CAGf;;AACAM,IAAAA,KAAK,CAACF,YAAD,CAAL,CAAoBG,IAApB,CACIC,IAAI,IAAKA,IAAI,CAACC,IAAL,EADb,EAEEF,IAFF,CAGIG,WAAW,IAAI;AACX,YAAMC,YAAY,GAAGC,iBAAiB,CAACF,WAAD,CAAtC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAFW,CAIX;AACH,KARL;AAUH,GAdD;AAeH,CAhBM","sourcesContent":["export const SET_CITY = 'SET_CITY';\nexport const setCity = payload => ({ type: SET_CITY, payload });\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url = 'http://api.openweathermap.org/data/2.5/forecast';\n\nexport const fetchForecast = payload => {\n    return dispatch => {\n        const url_forecast = `${url}?q=${city}&appid=${api_key}`;\n\n        // activar en el estado un indicador de busqueda de datos\n        fetch(url_forecast).then(\n            data => (data.json())\n        ).then(\n            WeatherData => {\n                const forecastData = transformForecast(WeatherData);\n                console.log(forecastData);\n\n                //modificar el estado con el resultado de la promise    \n            }\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}