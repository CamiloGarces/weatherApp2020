{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/containers/LocationListContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setSelectedCity } from './../actions';\nimport LocationList from './../components/LocationList';\n\nclass LocationListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelectionLocation = city => {\n      this.props.setCity(city);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LocationList, {\n      cities: this.props.cities,\n      onSelectedLocation: this.handleSelectionLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nLocationListContainer.propTypes = {\n  setCity: PropTypes.func.isRequired,\n  cities: PropTypes.array.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCity: value => dispatch(setSelectedCity(value)),\n  setweather: value => dispatch()\n});\n\nexport default connect(null, mapDispatchToProps)(LocationListContainer);","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/containers/LocationListContainer.js"],"names":["React","Component","connect","PropTypes","setSelectedCity","LocationList","LocationListContainer","handleSelectionLocation","city","props","setCity","render","cities","propTypes","func","isRequired","array","mapDispatchToProps","dispatch","value","setweather"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,qBAAN,SAAoCL,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAC1CM,uBAD0C,GAChBC,IAAI,IAAI;AAC9B,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,IAAnB;AACH,KAHyC;AAAA;;AAI1CG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACA,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MADnB;AAEA,MAAA,kBAAkB,EAAE,KAAKL,uBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AAbyC;;AAgB9CD,qBAAqB,CAACO,SAAtB,GAAkC;AAC9BH,EAAAA,OAAO,EAAEP,SAAS,CAACW,IAAV,CAAeC,UADM;AAE9BH,EAAAA,MAAM,EAAET,SAAS,CAACa,KAAV,CAAgBD;AAFM,CAAlC;;AAKA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,OAAO,EAAES,KAAK,IAAID,QAAQ,CAACd,eAAe,CAACe,KAAD,CAAhB,CADU;AAEpCC,EAAAA,UAAU,EAAED,KAAK,IAAID,QAAQ;AAFO,CAAL,CAAnC;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCX,qBAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setSelectedCity } from './../actions';\nimport LocationList from './../components/LocationList';\n\nclass LocationListContainer extends Component {\n    handleSelectionLocation = city => {\n        this.props.setCity(city);\n    }    \n    render() {\n        return (\n            <div>\n                <LocationList \n                cities={this.props.cities}\n                onSelectedLocation={this.handleSelectionLocation}>\n                </LocationList>               \n            </div>\n        );\n    }\n}\n\nLocationListContainer.propTypes = {\n    setCity: PropTypes.func.isRequired,\n    cities: PropTypes.array.isRequired\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setCity: value => dispatch(setSelectedCity(value)),\n    setweather: value => dispatch()\n});\n\nexport default connect(null, mapDispatchToProps)(LocationListContainer);"]},"metadata":{},"sourceType":"module"}