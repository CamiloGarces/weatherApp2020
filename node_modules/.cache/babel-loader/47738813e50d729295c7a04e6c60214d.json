{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\nclass WeatherLocation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleUpdateClick = () => {\n      const api_weather = getUrlWeatherByCity(this.state.city);\n      fetch(api_weather).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        const newWeather = transformWeather(data);\n        this.setState({\n          data: newWeather\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleUpdateClick();\n  }\n\n  render() {\n    const {\n      onWeatherLocationClick\n    } = this.props;\n    const {\n      city,\n      data\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weatherLocationCont\",\n      onClick: onWeatherLocationClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Location, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), data ? /*#__PURE__*/React.createElement(WeatherData, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 67\n      }\n    }));\n  }\n\n}\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string,\n  onWeatherLocationClick: PropTypes.func\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js"],"names":["React","CircularProgress","PropTypes","getUrlWeatherByCity","Location","WeatherData","WeatherLocation","Component","handleUpdateClick","api_weather","state","city","fetch","then","resolve","json","data","newWeather","transformWeather","setState","componentDidMount","render","onWeatherLocationClick","props","propTypes","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAGA;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,eAAN,SAA8BC,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAOpCC,iBAPoC,GAOhB,MAAM;AACtB,YAAMC,WAAW,GAAGN,mBAAmB,CAAC,KAAKO,KAAL,CAAWC,IAAZ,CAAvC;AACAC,MAAAA,KAAK,CAACH,WAAD,CAAL,CAAmBI,IAAnB,CAAwBC,OAAO,IAAI;AAE/B,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAHD,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACZ,cAAMC,UAAU,GAAGC,gBAAgB,CAACF,IAAD,CAAnC;AACA,aAAKG,QAAL,CAAc;AACVH,UAAAA,IAAI,EAAEC;AADI,SAAd;AAGH,OARD;AASH,KAlBmC;AAAA;;AAGpCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,iBAAL;AACH;;AAeDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAA6B,KAAKC,KAAxC;AACA,UAAM;AAACZ,MAAAA,IAAD;AAAOK,MAAAA;AAAP,QAAe,KAAKN,KAA1B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,OAAO,EAAEY,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEX,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKK,IAAI,gBAAG,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAA6C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtD,CADJ;AAOH;;AA9BmC;;AAiCxCV,eAAe,CAACkB,SAAhB,GAA4B;AACxBb,EAAAA,IAAI,EAAET,SAAS,CAACuB,MADQ;AAExBH,EAAAA,sBAAsB,EAAEpB,SAAS,CAACwB;AAFV,CAA5B;AAKA,eAAepB,eAAf","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n\n\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\n\nclass WeatherLocation extends Component {\n\n\n    componentDidMount() {\n        this.handleUpdateClick();\n    }\n  \n    handleUpdateClick = () => {\n        const api_weather = getUrlWeatherByCity(this.state.city);\n        fetch(api_weather).then(resolve => {\n\n            return resolve.json();\n        }).then(data => {\n            const newWeather = transformWeather(data);\n            this.setState({\n                data: newWeather,\n            }) \n        });\n    }\n\n    render() {\n        const { onWeatherLocationClick } = this.props;\n        const {city, data} = this.state;\n        return (\n            <div className='weatherLocationCont' onClick={onWeatherLocationClick}>\n                <Location city={city}></Location>\n                {data ? <WeatherData data={data}></WeatherData> : <CircularProgress\n                />}\n            </div>\n        );\n    }\n}\n\nWeatherLocation.propTypes = {\n    city: PropTypes.string,\n    onWeatherLocationClick: PropTypes.func,\n}\n\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}