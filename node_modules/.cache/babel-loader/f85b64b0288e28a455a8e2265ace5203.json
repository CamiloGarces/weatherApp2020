{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/components/ForecastExtended.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ForecastItem from './Forecastitem';\nimport './styles.css';\n\nclass ForecastExtended extends Component {\n  constructor() {\n    super();\n\n    this.updateCity = city => {\n      const url_forecast = `${url}?q=${city}&appid=${api_key}`;\n      fetch(url_forecast).then(data => data.json()).then(WeatherData => {\n        const forecastData = transformForecast(WeatherData);\n        this.setState({\n          forecastData\n        });\n      });\n    };\n\n    this.renderForecastItemDay = forecastData => {\n      return forecastData.map(forecast => /*#__PURE__*/React.createElement(ForecastItem, {\n        weekDay: forecast.weekDay,\n        hour: forecast.hour,\n        data: forecast.data,\n        key: `${forecast.weekDay}${forecast.hour}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.renderProgress = () => {\n      return \"Cargando pronostico extendido\";\n    };\n\n    this.state = {\n      forecastData: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateCity(this.props.city);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.city !== this.props.city) {\n      this.setState({\n        forecastData: null\n      });\n      this.updateCity(nextProps.city);\n    }\n  }\n\n  render() {\n    const {\n      city\n    } = this.props;\n    const {\n      forecastData\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"forecast-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Pron\\xF3stico extendido para \", city, \":\"), forecastData ? this.renderForecastItemDay(forecastData) : this.renderProgress());\n  }\n\n}\n\nForecastExtended.propTypes = {\n  city: PropTypes.string.isRequired\n};\nexport default ForecastExtended;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/components/ForecastExtended.js"],"names":["React","Component","PropTypes","ForecastItem","ForecastExtended","constructor","updateCity","city","url_forecast","url","api_key","fetch","then","data","json","WeatherData","forecastData","transformForecast","setState","renderForecastItemDay","map","forecast","weekDay","hour","renderProgress","state","componentDidMount","props","componentWillReceiveProps","nextProps","render","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,cAAP;;AAGA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,UAhBc,GAgBDC,IAAI,IAAI;AACjB,YAAMC,YAAY,GAAI,GAAEC,GAAI,MAAKF,IAAK,UAASG,OAAQ,EAAvD;AACAC,MAAAA,KAAK,CAACH,YAAD,CAAL,CAAoBI,IAApB,CACIC,IAAI,IAAKA,IAAI,CAACC,IAAL,EADb,EAEEF,IAFF,CAGIG,WAAW,IAAI;AACX,cAAMC,YAAY,GAAGC,iBAAiB,CAACF,WAAD,CAAtC;AACA,aAAKG,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AACH,OANL;AAQH,KA1Ba;;AAAA,SA4BdG,qBA5Bc,GA4BWH,YAAD,IAAkB;AACvC,aAAOA,YAAY,CAACI,GAAb,CAAiBC,QAAQ,iBAC/B,oBAAC,YAAD;AACI,QAAA,OAAO,EAAEA,QAAQ,CAACC,OADtB;AAEI,QAAA,IAAI,EAAED,QAAQ,CAACE,IAFnB;AAGI,QAAA,IAAI,EAAEF,QAAQ,CAACR,IAHnB;AAII,QAAA,GAAG,EAAG,GAAEQ,QAAQ,CAACC,OAAQ,GAAED,QAAQ,CAACE,IAAK,EAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAP;AAOF,KApCa;;AAAA,SAsCdC,cAtCc,GAsCG,MAAM;AACnB,aAAO,+BAAP;AACH,KAxCa;;AAEV,SAAKC,KAAL,GAAa;AAAET,MAAAA,YAAY,EAAE;AAAhB,KAAb;AACH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKpB,UAAL,CAAgB,KAAKqB,KAAL,CAAWpB,IAA3B;AACH;;AAEDqB,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAGA,SAAS,CAACtB,IAAV,KAAmB,KAAKoB,KAAL,CAAWpB,IAAjC,EAAuC;AACnC,WAAKW,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,WAAKV,UAAL,CAAgBuB,SAAS,CAACtB,IAA1B;AACH;AACJ;;AA4BDuB,EAAAA,MAAM,GAAG;AACL,UAAO;AAAEvB,MAAAA;AAAF,QAAW,KAAKoB,KAAvB;AACA,UAAO;AAAEX,MAAAA;AAAF,QAAmB,KAAKS,KAA/B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAA0DlB,IAA1D,MADJ,EAEKS,YAAY,GACT,KAAKG,qBAAL,CAA2BH,YAA3B,CADS,GAET,KAAKQ,cAAL,EAJR,CADJ;AASH;;AAvDoC;;AA0DzCpB,gBAAgB,CAAC2B,SAAjB,GAA6B;AACzBxB,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC;AADE,CAA7B;AAIA,eAAe7B,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ForecastItem from './Forecastitem';\nimport './styles.css';\n\n\nclass ForecastExtended extends Component {\n    constructor() {\n        super();\n        this.state = { forecastData: null }\n    }\n\n    componentDidMount() {\n        this.updateCity(this.props.city);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.city !== this.props.city) {\n            this.setState({ forecastData: null });\n            this.updateCity(nextProps.city)\n        }\n    }\n    \n    updateCity = city => {\n        const url_forecast = `${url}?q=${city}&appid=${api_key}`;\n        fetch(url_forecast).then(\n            data => (data.json())\n        ).then(\n            WeatherData => {\n                const forecastData = transformForecast(WeatherData);\n                this.setState({ forecastData });\n            }\n        )\n    }\n\n    renderForecastItemDay = (forecastData) => {\n       return forecastData.map(forecast => (\n        <ForecastItem \n            weekDay={forecast.weekDay} \n            hour={forecast.hour} \n            data={forecast.data} \n            key={`${forecast.weekDay}${forecast.hour}`}>\n        </ForecastItem>))\n    }\n\n    renderProgress = () => {\n        return \"Cargando pronostico extendido\";\n    }\n\n    render() {\n        const  { city } = this.props;\n        const  { forecastData } = this.state;\n        return (\n            <div>\n                <h2 className='forecast-title'>Pron√≥stico extendido para {city}:</h2>\n                {forecastData ?\n                    this.renderForecastItemDay(forecastData) :\n                    this.renderProgress()\n                }\n            </div>            \n        )\n    }\n}\n\nForecastExtended.propTypes = {\n    city: PropTypes.string.isRequired,\n}\n\nexport default ForecastExtended;"]},"metadata":{},"sourceType":"module"}