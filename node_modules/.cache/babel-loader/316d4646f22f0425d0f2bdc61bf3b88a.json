{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js\";\nimport React, { Component } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport transformWeather from './../../services/transformWeather';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount = () => {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then(resolve => {\n\n            return resolve.json();\n        }).then(data => {\n            const newWeather = transformWeather(data);\n            this.setState({\n                data: newWeather,\n            }) \n        });\n    }\n\n*/\n\nclass WeatherLocation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdateClick = () => {\n      const api_weather = getUrlWeatherByCity(this.state.city);\n      fetch(api_weather).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        const newWeather = transformWeather(data);\n        this.setState({\n          data: newWeather\n        });\n      });\n    };\n\n    const {\n      city\n    } = props;\n    this.state = {\n      city,\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    this.handleUpdateClick();\n  }\n  /* lo comentariie porque no estaba haciendo nada\n      componentDidUpdate(prevProps, prevState) {\n  \n      }\n   */\n\n\n  render() {\n    const {\n      onWeatherLocationClick\n    } = this.props;\n    const {\n      city,\n      data\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weatherLocationCont\",\n      onClick: onWeatherLocationClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Location, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), data ? /*#__PURE__*/React.createElement(WeatherData, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 67\n      }\n    }));\n  }\n\n}\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string,\n  onWeatherLocationClick: PropTypes.func\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js"],"names":["React","Component","CircularProgress","PropTypes","getUrlWeatherByCity","transformWeather","Location","WeatherData","WeatherLocation","constructor","props","handleUpdateClick","api_weather","state","city","fetch","then","resolve","json","data","newWeather","setState","componentDidMount","render","onWeatherLocationClick","propTypes","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAGA;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAMC,eAAN,SAA8BP,SAA9B,CAAwC;AACpCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,iBAjBmB,GAiBC,MAAM;AACtB,YAAMC,WAAW,GAAGR,mBAAmB,CAAC,KAAKS,KAAL,CAAWC,IAAZ,CAAvC;AACAC,MAAAA,KAAK,CAACH,WAAD,CAAL,CAAmBI,IAAnB,CAAwBC,OAAO,IAAI;AAE/B,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAHD,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACZ,cAAMC,UAAU,GAAGf,gBAAgB,CAACc,IAAD,CAAnC;AACA,aAAKE,QAAL,CAAc;AACVF,UAAAA,IAAI,EAAEC;AADI,SAAd;AAGH,OARD;AASH,KA5BkB;;AAEf,UAAM;AAAEN,MAAAA;AAAF,QAAWJ,KAAjB;AACA,SAAKG,KAAL,GAAa;AACTC,MAAAA,IADS;AAETK,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,iBAAL;AACH;AACL;;;;;;;AAkBIY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAA6B,KAAKd,KAAxC;AACA,UAAM;AAACI,MAAAA,IAAD;AAAOK,MAAAA;AAAP,QAAe,KAAKN,KAA1B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,OAAO,EAAEW,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEV,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKK,IAAI,gBAAG,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAA6C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtD,CADJ;AAOH;;AAzCmC;;AA4CxCX,eAAe,CAACiB,SAAhB,GAA4B;AACxBX,EAAAA,IAAI,EAAEX,SAAS,CAACuB,MADQ;AAExBF,EAAAA,sBAAsB,EAAErB,SAAS,CAACwB;AAFV,CAA5B;AAKA,eAAenB,eAAf","sourcesContent":["import React, { Component }from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport transformWeather from './../../services/transformWeather';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n\n\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount = () => {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then(resolve => {\n\n            return resolve.json();\n        }).then(data => {\n            const newWeather = transformWeather(data);\n            this.setState({\n                data: newWeather,\n            }) \n        });\n    }\n\n*/\n\n\nclass WeatherLocation extends Component {\n    constructor(props) {\n        super(props);\n        const { city } = props;\n        this.state = {\n            city,\n            data: null,\n        };\n    }\n\n    componentDidMount() {\n        this.handleUpdateClick();\n    }\n/* lo comentariie porque no estaba haciendo nada\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n */   \n    handleUpdateClick = () => {\n        const api_weather = getUrlWeatherByCity(this.state.city);\n        fetch(api_weather).then(resolve => {\n\n            return resolve.json();\n        }).then(data => {\n            const newWeather = transformWeather(data);\n            this.setState({\n                data: newWeather,\n            }) \n        });\n    }\n\n    render() {\n        const { onWeatherLocationClick } = this.props;\n        const {city, data} = this.state;\n        return (\n            <div className='weatherLocationCont' onClick={onWeatherLocationClick}>\n                <Location city={city}></Location>\n                {data ? <WeatherData data={data}></WeatherData> : <CircularProgress\n                />}\n            </div>\n        );\n    }\n}\n\nWeatherLocation.propTypes = {\n    city: PropTypes.string,\n    onWeatherLocationClick: PropTypes.func,\n}\n\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}