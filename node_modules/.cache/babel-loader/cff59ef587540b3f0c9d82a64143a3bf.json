{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { PropTypes } from 'prop-types';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\nconst WeatherLocation = ({\n  onWeatherLocationClick,\n  city,\n  data\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"weatherLocationCont\",\n  onClick: onWeatherLocationClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Location, {\n  city: city,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}), data ? /*#__PURE__*/React.createElement(WeatherData, {\n  data: data,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }\n}) : /*#__PURE__*/React.createElement(CircularProgress, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 59\n  }\n}));\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string,\n  onWeatherLocationClick: PropTypes.func,\n  data: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.string.isRequired\n  })\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js"],"names":["React","CircularProgress","PropTypes","Location","WeatherData","WeatherLocation","onWeatherLocationClick","city","data","propTypes","string","func","shape","temperature","number","isRequired","weatherState","humidity","wind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAGA;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,sBAAF;AAA0BC,EAAAA,IAA1B;AAAgCC,EAAAA;AAAhC,CAAD,kBACpB;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAqC,EAAA,OAAO,EAAEF,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEKC,IAAI,gBAAG,oBAAC,WAAD;AAAa,EAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,gBAA6C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFtD,CADJ;;AAQAH,eAAe,CAACI,SAAhB,GAA4B;AACxBF,EAAAA,IAAI,EAAEL,SAAS,CAACQ,MADQ;AAExBJ,EAAAA,sBAAsB,EAAEJ,SAAS,CAACS,IAFV;AAGxBH,EAAAA,IAAI,EAAEN,SAAS,CAACU,KAAV,CAAgB;AAClBC,IAAAA,WAAW,EAACX,SAAS,CAACY,MAAV,CAAiBC,UADX;AAElBC,IAAAA,YAAY,EAAEd,SAAS,CAACQ,MAAV,CAAiBK,UAFb;AAGlBE,IAAAA,QAAQ,EAAEf,SAAS,CAACY,MAAV,CAAiBC,UAHT;AAIlBG,IAAAA,IAAI,EAAEhB,SAAS,CAACQ,MAAV,CAAiBK;AAJL,GAAhB;AAHkB,CAA5B;AAWA,eAAeV,eAAf","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { PropTypes } from 'prop-types';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n\n\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\n\nconst WeatherLocation = ({ onWeatherLocationClick, city, data }) => (\n    <div className='weatherLocationCont' onClick={onWeatherLocationClick}>\n        <Location city={city}></Location>\n        {data ? <WeatherData data={data}></WeatherData> : <CircularProgress\n        />}\n    </div>\n);\n\nWeatherLocation.propTypes = {\n    city: PropTypes.string,\n    onWeatherLocationClick: PropTypes.func,\n    data: PropTypes.shape({\n        temperature:PropTypes.number.isRequired,\n        weatherState: PropTypes.string.isRequired,\n        humidity: PropTypes.number.isRequired,\n        wind: PropTypes.string.isRequired,\n    }),\n}\n\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}