{"ast":null,"code":"import transformForecast from './../services/transformForecast';\nexport const SET_CITY = 'SET_CITY';\nexport const SET_FORECAST_DATA = 'SET_FORECAST_DATA';\n\nconst setCity = payload => ({\n  type: SET_CITY,\n  payload\n});\n\nconst setForecastData = payload => ({\n  type: SET_FORECAST_DATA,\n  payload\n});\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url = 'http://api.openweathermap.org/data/2.5/forecast';\nexport const setSelectedCity = payload => {\n  return dispatch => {\n    const url_forecast = `${url}?q=${payload}&appid=${api_key}`; // activar en el estado un indicador de busqueda de datos\n\n    dispatch(setCity(payload));\n    return fetch(url_forecast).then(data => data.json()).then(WeatherData => {\n      const forecastData = transformForecast(WeatherData);\n      console.log(forecastData); //modificar el estado con el resultado de la promise (fetch)\n\n      dispatch(setForecastData({\n        city: payload,\n        forecastData\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/actions/index.js"],"names":["transformForecast","SET_CITY","SET_FORECAST_DATA","setCity","payload","type","setForecastData","api_key","url","setSelectedCity","dispatch","url_forecast","fetch","then","data","json","WeatherData","forecastData","console","log","city"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,iCAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;;AAEP,MAAMC,OAAO,GAAGC,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEJ,QAAR;AAAkBG,EAAAA;AAAlB,CAAL,CAAvB;;AACA,MAAME,eAAe,GAAGF,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEH,iBAAR;AAA2BE,EAAAA;AAA3B,CAAL,CAA/B;;AAEA,MAAMG,OAAO,GAAG,kCAAhB;AACA,MAAMC,GAAG,GAAG,iDAAZ;AAEA,OAAO,MAAMC,eAAe,GAAGL,OAAO,IAAI;AACtC,SAAOM,QAAQ,IAAI;AACf,UAAMC,YAAY,GAAI,GAAEH,GAAI,MAAKJ,OAAQ,UAASG,OAAQ,EAA1D,CADe,CAGf;;AACAG,IAAAA,QAAQ,CAACP,OAAO,CAACC,OAAD,CAAR,CAAR;AAEA,WAAOQ,KAAK,CAACD,YAAD,CAAL,CAAoBE,IAApB,CACHC,IAAI,IAAKA,IAAI,CAACC,IAAL,EADN,EAELF,IAFK,CAGHG,WAAW,IAAI;AACX,YAAMC,YAAY,GAAGjB,iBAAiB,CAACgB,WAAD,CAAtC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAFW,CAIX;;AACAP,MAAAA,QAAQ,CAACJ,eAAe,CAAC;AAAEc,QAAAA,IAAI,EAAEhB,OAAR;AAAiBa,QAAAA;AAAjB,OAAD,CAAhB,CAAR;AACH,KATE,CAAP;AAWH,GAjBD;AAkBH,CAnBM","sourcesContent":["import transformForecast from './../services/transformForecast';\n\nexport const SET_CITY = 'SET_CITY';\nexport const SET_FORECAST_DATA = 'SET_FORECAST_DATA';\n\nconst setCity = payload => ({ type: SET_CITY, payload });\nconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload });\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url = 'http://api.openweathermap.org/data/2.5/forecast';\n\nexport const setSelectedCity = payload => {\n    return dispatch => {\n        const url_forecast = `${url}?q=${payload}&appid=${api_key}`;\n\n        // activar en el estado un indicador de busqueda de datos\n        dispatch(setCity(payload));\n\n        return fetch(url_forecast).then(\n            data => (data.json())\n        ).then(\n            WeatherData => {\n                const forecastData = transformForecast(WeatherData);\n                console.log(forecastData);\n\n                //modificar el estado con el resultado de la promise (fetch)\n                dispatch(setForecastData({ city: payload, forecastData }));\n            }\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}