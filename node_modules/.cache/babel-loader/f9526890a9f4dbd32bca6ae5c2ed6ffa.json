{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/containers/ForecastExtendedContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getForecastDataFromCities } from './../reducers/cities';\nimport ForecastExtended from './../components/ForecastExtended';\n\nclass ForecastExtendedContainer extends Component {\n  render() {\n    const {\n      city,\n      forecastData\n    } = this.props;\n    return city && /*#__PURE__*/React.createElement(ForecastExtended, {\n      city: city,\n      forecastData: forecastData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nForecastExtendedContainer.propTypes = {\n  city: PropTypes.string.isRequired,\n  forecastData: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  city: state.city,\n  forecastData: getForecastDataFromCities\n});\n\nexport default connect(mapStateToProps, null)(ForecastExtendedContainer);","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/containers/ForecastExtendedContainer.js"],"names":["React","Component","PropTypes","connect","getForecastDataFromCities","ForecastExtended","ForecastExtendedContainer","render","city","forecastData","props","propTypes","string","isRequired","array","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;AAEA,MAAMC,yBAAN,SAAwCL,SAAxC,CAAkD;AAC9CM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAyB,KAAKC,KAApC;AACA,WACIF,IAAI,iBACJ,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,IAAxB;AAA8B,MAAA,YAAY,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIH;;AAP6C;;AAUlDH,yBAAyB,CAACK,SAA1B,GAAsC;AAClCH,EAAAA,IAAI,EAAEN,SAAS,CAACU,MAAV,CAAiBC,UADW;AAElCJ,EAAAA,YAAY,EAAEP,SAAS,CAACY;AAFU,CAAtC;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAER,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAd;AAAoBC,EAAAA,YAAY,EAAEL;AAAlC,CAAL,CAA7B;;AAEA,eAAeD,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAA+BT,yBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getForecastDataFromCities } from './../reducers/cities';\nimport ForecastExtended from './../components/ForecastExtended';\n\nclass ForecastExtendedContainer extends Component {\n    render() {\n        const { city, forecastData } = this.props;\n        return (\n            city &&\n            <ForecastExtended city={city} forecastData={forecastData} />\n        );\n    }\n}\n\nForecastExtendedContainer.propTypes = {\n    city: PropTypes.string.isRequired,\n    forecastData: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({ city: state.city, forecastData: getForecastDataFromCities }); \n\nexport default connect(mapStateToProps, null)(ForecastExtendedContainer);"]},"metadata":{},"sourceType":"module"}