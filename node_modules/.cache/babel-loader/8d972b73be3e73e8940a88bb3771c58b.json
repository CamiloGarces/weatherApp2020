{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/containers/LocationListContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setSelectedCity, setWeather } from './../actions';\nimport { getWeatherCities } from './../';\nimport LocationList from './../components/LocationList';\n\nclass LocationListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelectionLocation = city => {\n      this.props.setCity(city);\n    };\n  }\n\n  componentDidMount() {\n    this.props.setWeather(this.props.cities);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LocationList, {\n      cities: this.props.citiesWeather,\n      onSelectedLocation: this.handleSelectionLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nLocationListContainer.propTypes = {\n  setCity: PropTypes.func.isRequired,\n  cities: PropTypes.array.isRequired,\n  citiesWeather: PropTypes.array\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCity: value => dispatch(setSelectedCity(value)),\n  setWeather: cities => dispatch(setWeather(cities))\n});\n\nconst mapStateToProps = state => ({\n  citiesWeather: getWeatherCities(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationListContainer);","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/containers/LocationListContainer.js"],"names":["React","Component","connect","PropTypes","setSelectedCity","setWeather","getWeatherCities","LocationList","LocationListContainer","handleSelectionLocation","city","props","setCity","componentDidMount","cities","render","citiesWeather","propTypes","func","isRequired","array","mapDispatchToProps","dispatch","value","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,cAA5C;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,qBAAN,SAAoCP,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAM1CQ,uBAN0C,GAMhBC,IAAI,IAAI;AAC9B,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,IAAnB;AACH,KARyC;AAAA;;AAE1CG,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWG,MAAjC;AACH;;AAKDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACA,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,aADnB;AAEA,MAAA,kBAAkB,EAAE,KAAKP,uBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AAlByC;;AAqB9CD,qBAAqB,CAACS,SAAtB,GAAkC;AAC9BL,EAAAA,OAAO,EAAET,SAAS,CAACe,IAAV,CAAeC,UADM;AAE9BL,EAAAA,MAAM,EAAEX,SAAS,CAACiB,KAAV,CAAgBD,UAFM;AAG9BH,EAAAA,aAAa,EAAEb,SAAS,CAACiB;AAHK,CAAlC;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,OAAO,EAAEW,KAAK,IAAID,QAAQ,CAAClB,eAAe,CAACmB,KAAD,CAAhB,CADU;AAEpClB,EAAAA,UAAU,EAAES,MAAM,IAAIQ,QAAQ,CAACjB,UAAU,CAACS,MAAD,CAAX;AAFM,CAAL,CAAnC;;AAKA,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAACT,EAAAA,aAAa,EAAEV,gBAAgB,CAACmB,KAAD;AAAhC,CAAL,CAA7B;;AACA,eAAevB,OAAO,CAACsB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6Cb,qBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setSelectedCity, setWeather } from './../actions';\nimport { getWeatherCities } from './../'\nimport LocationList from './../components/LocationList';\n\nclass LocationListContainer extends Component {\n\n    componentDidMount() {\n        this.props.setWeather(this.props.cities);\n    }\n    \n    handleSelectionLocation = city => {\n        this.props.setCity(city);\n    }    \n    render() {\n        return (\n            <div>\n                <LocationList \n                cities={this.props.citiesWeather}\n                onSelectedLocation={this.handleSelectionLocation}>\n                </LocationList>               \n            </div>\n        );\n    }\n}\n\nLocationListContainer.propTypes = {\n    setCity: PropTypes.func.isRequired,\n    cities: PropTypes.array.isRequired,\n    citiesWeather: PropTypes.array,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setCity: value => dispatch(setSelectedCity(value)),\n    setWeather: cities => dispatch(setWeather(cities))\n});\n\nconst mapStateToProps = state => ({citiesWeather: getWeatherCities(state)})\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationListContainer);"]},"metadata":{},"sourceType":"module"}