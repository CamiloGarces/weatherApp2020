{"ast":null,"code":"var _jsxFileName = \"/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\nclass WeatherLocation extends Component {\n  /* comento esto porque en el video esto no aparece\n      componentDidMount() {\n          this.handleUpdateClick();\n      }\n    \n      handleUpdateClick = () => {\n          const api_weather = getUrlWeatherByCity(this.state.city);\n          fetch(api_weather).then(resolve => {\n  \n              return resolve.json();\n          }).then(data => {\n              const newWeather = transformWeather(data);\n              this.setState({\n                  data: newWeather,\n              }) \n          });\n      }\n  */\n  render() {\n    const {\n      onWeatherLocationClick,\n      city,\n      data\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weatherLocationCont\",\n      onClick: onWeatherLocationClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Location, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), data ? /*#__PURE__*/React.createElement(WeatherData, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 67\n      }\n    }));\n  }\n\n}\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string,\n  onWeatherLocationClick: PropTypes.func,\n  data: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.string.isRequired\n  })\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["/Users/Imac/Desktop/weatherApp/wheather-app/src/components/WeatherLocation/index.js"],"names":["React","CircularProgress","PropTypes","getUrlWeatherByCity","Location","WeatherData","WeatherLocation","Component","render","onWeatherLocationClick","city","data","props","propTypes","string","func","shape","temperature","number","isRequired","weatherState","humidity","wind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAGA;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,eAAN,SAA8BC,SAA9B,CAAwC;AAExC;;;;;;;;;;;;;;;;;;AAkBIC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,sBAAF;AAA0BC,MAAAA,IAA1B;AAAgCC,MAAAA;AAAhC,QAAyC,KAAKC,KAApD;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,OAAO,EAAEH,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKC,IAAI,gBAAG,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAA6C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtD,CADJ;AAOH;;AA7BmC;;AAgCxCL,eAAe,CAACO,SAAhB,GAA4B;AACxBH,EAAAA,IAAI,EAAER,SAAS,CAACY,MADQ;AAExBL,EAAAA,sBAAsB,EAAEP,SAAS,CAACa,IAFV;AAGxBJ,EAAAA,IAAI,EAAET,SAAS,CAACc,KAAV,CAAgB;AAClBC,IAAAA,WAAW,EAACf,SAAS,CAACgB,MAAV,CAAiBC,UADX;AAElBC,IAAAA,YAAY,EAAElB,SAAS,CAACY,MAAV,CAAiBK,UAFb;AAGlBE,IAAAA,QAAQ,EAAEnB,SAAS,CAACgB,MAAV,CAAiBC,UAHT;AAIlBG,IAAAA,IAAI,EAAEpB,SAAS,CAACY,MAAV,CAAiBK;AAJL,GAAhB;AAHkB,CAA5B;AAWA,eAAeb,eAAf","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { PropTypes } from 'prop-types';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n\n\n/*\n\nconst api_key = '12965ebd8a03069ed8c8a7f40535da7d';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\n\n    componentWillMount() {\n        const { city } = this.state;\n        const api_weather = `${url}?q=${city}&appId=${api_key}`;\n        fetch(api_weather).then( data => {\n            return data.json();\n        }).then(weather_data => {\n            const data = transformWeather(weather_data);\n            this.setState({ data });\n        });\n    }\n\n*/\n\n\nclass WeatherLocation extends Component {\n\n/* comento esto porque en el video esto no aparece\n    componentDidMount() {\n        this.handleUpdateClick();\n    }\n  \n    handleUpdateClick = () => {\n        const api_weather = getUrlWeatherByCity(this.state.city);\n        fetch(api_weather).then(resolve => {\n\n            return resolve.json();\n        }).then(data => {\n            const newWeather = transformWeather(data);\n            this.setState({\n                data: newWeather,\n            }) \n        });\n    }\n*/\n    render() {\n        const { onWeatherLocationClick, city, data } = this.props;\n        return (\n            <div className='weatherLocationCont' onClick={onWeatherLocationClick}>\n                <Location city={city}></Location>\n                {data ? <WeatherData data={data}></WeatherData> : <CircularProgress\n                />}\n            </div>\n        );\n    }\n}\n\nWeatherLocation.propTypes = {\n    city: PropTypes.string,\n    onWeatherLocationClick: PropTypes.func,\n    data: PropTypes.shape({\n        temperature:PropTypes.number.isRequired,\n        weatherState: PropTypes.string.isRequired,\n        humidity: PropTypes.number.isRequired,\n        wind: PropTypes.string.isRequired,\n    }),\n}\n\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}